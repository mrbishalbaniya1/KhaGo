rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =================================
    // Helper Functions
    // =================================
    function isSuperAdmin() {
      return request.auth.token.email == 'apeuninepal.com@gmail.com';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isManager() {
      return getUserData().role == 'manager';
    }

    // =================================
    // User Collection
    // =================================
    match /users/{userId} {
      // READ: 
      // 1. Superadmin can read any user doc.
      // 2. A user can read their own doc.
      // 3. A manager can read the docs of their employees or customers.
      allow read: if isSuperAdmin() || 
                     isOwner(userId) ||
                     (isManager() && get(/databases/$(database)/documents/users/$(userId)).data.managerId == request.auth.uid);

      // CREATE: 
      // 1. Superadmin can create users (for managers).
      // 2. Any authenticated user can create their own user document if it doesn't exist.
      allow create: if isSuperAdmin() || (isSignedIn() && isOwner(userId));

      // UPDATE:
      // 1. Superadmin can update any user doc.
      // 2. A user can update their own doc.
      allow update: if isSuperAdmin() || isOwner(userId);
      
      // DELETE:
      // 1. Superadmin can delete users.
      // 2. A manager can delete their employees/customers.
      allow delete: if isSuperAdmin() || 
                       (isManager() && get(/databases/$(database)/documents/users/$(userId)).data.managerId == request.auth.uid);
    }
    
    // =================================
    // Business Data Collections
    // =================================
    function isManagerOfResource(managerId) {
      // Check if the requesting user is the manager of the resource
      return isManager() && request.auth.uid == managerId;
    }

    function isEmployeeOfResource(managerId) {
      // Check if the requesting user is an employee of the manager of the resource
      return getUserData().managerId == managerId;
    }
    
    // Generic rule for business-related data
    match /{collection}/{docId} {
      // Applied to: products, orders, expenses, inventory
      allow read, write: if isSignedIn() && (
                            isSuperAdmin() || 
                            isManagerOfResource(resource.data.managerId) || 
                            isEmployeeOfResource(resource.data.managerId)
                          );
    }
  }
}
