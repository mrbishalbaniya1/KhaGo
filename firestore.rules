
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.email == 'apeuninepal.com@gmail.com';
    }
    
    function isManager() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }

    function isEmployee(managerId) {
      let user = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return user.role in ['waiter', 'cook', 'cashier', 'employee'] && user.managerId == managerId;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function userIsApproved() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
    }

    // USERS collection
    match /users/{userId} {
      allow read: if isSuperAdmin() || isOwner(userId);
      allow create: if request.auth.uid != null; // Allow user creation during sign-up
      allow update: if isSuperAdmin() || isOwner(userId);
      allow delete: if isSuperAdmin();
    }
    
    match /users_by_email/{email} {
        allow read, write: if request.auth != null;
    }

    // Generic rule for collections owned by managers
    function isManagerResource(managerId) {
        return request.auth.uid == managerId;
    }
    
    // PRODUCTS collection
    match /products/{productId} {
      allow read: if true; // Products can be read by anyone
      allow write: if isSuperAdmin() || (isManager() && isManagerResource(request.resource.data.managerId));
    }

    // ORDERS collection
    match /orders/{orderId} {
      allow read, write: if isSuperAdmin() || (isManager() && isManagerResource(request.resource.data.managerId));
      allow create: if isManager() && isManagerResource(request.resource.data.managerId);
    }
    
    // EXPENSES collection
    match /expenses/{expenseId} {
       allow read, write: if isSuperAdmin() || (isManager() && isManagerResource(request.resource.data.managerId));
       allow create: if isManager() && isManagerResource(request.resource.data.managerId);
    }
    
    // INVENTORY collection
    match /inventory/{transactionId} {
       allow read, write: if isSuperAdmin() || (isManager() && isManagerResource(request.resource.data.managerId));
       allow create: if isManager() && isManagerResource(request.resource.data.managerId);
    }
  }
}
