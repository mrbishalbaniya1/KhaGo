
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth.token.email == 'apeuninepal.com@gmail.com';
    }

    function isManager() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }

    function isEmployee(managerId) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role in ['waiter', 'cook', 'employee', 'cashier'] && userDoc.managerId == managerId;
    }
    
    function isOwnerOrManager(managerId) {
        return request.auth.uid == managerId || isEmployee(managerId);
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }
    
    function isCreatingOwnUserDoc() {
        return request.auth.uid == request.resource.data.uid;
    }

    // USERS collection
    match /users/{userId} {
      // Allow read access for:
      // 1. The user themselves
      // 2. A superadmin
      // 3. A manager to view their own team members and customers
      allow read: if isOwner(userId) 
                  || isSuperAdmin() 
                  || (isManager() && get(/databases/$(database)/documents/users/$(userId)).data.managerId == request.auth.uid);
                  
      // Allow create access for:
      // 1. Any authenticated user creating their OWN document (for signup)
      // 2. A superadmin
      // 3. A manager adding a team member or customer
      allow create: if isCreatingOwnUserDoc() 
                    || isSuperAdmin()
                    || (isManager() && request.resource.data.managerId == request.auth.uid);
                    
      // Allow update access for:
      // 1. The user themselves (for profile updates)
      // 2. A superadmin (for approvals, etc.)
      // 3. A manager updating their own team members
      allow update: if isOwner(userId) 
                    || isSuperAdmin() 
                    || (isManager() && get(/databases/$(database)/documents/users/$(userId)).data.managerId == request.auth.uid);

      // Allow delete access for:
      // 1. A superadmin
      // 2. A manager deleting their own team members/customers
      allow delete: if isSuperAdmin() 
                    || (isManager() && get(/databases/$(database)/documents/users/$(userId)).data.managerId == request.auth.uid);
    }

    // All business data collections (Orders, Products, etc.)
    // Rules are the same for all of them: only the manager or their employees can access.
    match /{collection}/{docId} {
      allow read, write: if isSuperAdmin() || (request.auth != null && isOwnerOrManager(resource.data.managerId));
      allow create: if isSuperAdmin() || (request.auth != null && isOwnerOrManager(request.resource.data.managerId));
    }
  }
}
