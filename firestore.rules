
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return request.auth.token.email == 'apeuninepal.com@gmail.com';
    }

    function isManager(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'manager';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isApproved(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data.status == 'approved';
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    // A user can be created if they are authenticated and creating their own user document.
    // This is for the initial sign-up process.
    match /users/{userId} {
      allow read: if isSignedIn() && (isSuperAdmin() || isOwner(userId) || getUserData(request.auth.uid).managerId == userId || getUserData(userId).managerId == request.auth.uid);
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && (isSuperAdmin() || isOwner(userId) || (isManager(request.auth.uid) && request.resource.data.managerId == request.auth.uid));
      allow delete: if isSignedIn() && (isSuperAdmin() || (isManager(request.auth.uid) && getUserData(userId).managerId == request.auth.uid));
    }
    
    // Allow superadmin to list all managers
    match /users_by_email/{email} {
        allow read, write: if isSuperAdmin();
    }

    // Rules for collections that are scoped by managerId
    match /{collection}/{docId} {
      allow read, write: if isSignedIn() &&
                            isApproved(request.auth.uid) &&
                            (getRole(request.auth.uid) == 'superadmin' ||
                             (getRole(request.auth.uid) == 'manager' && request.auth.uid == resource.data.managerId) ||
                             (getUserData(request.auth.uid).managerId == resource.data.managerId));

      allow create: if isSignedIn() &&
                      isApproved(request.auth.uid) &&
                      (getRole(request.auth.uid) == 'manager' && request.auth.uid == request.resource.data.managerId) ||
                      (getUserData(request.auth.uid).managerId == request.resource.data.managerId);
    }
  }
}
