
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isManager() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }
    
    function isEmployee(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.managerId == request.auth.uid;
    }

    // All users can read their own user data.
    // Managers can read their employees' data.
    // SuperAdmins can read any user data.
    match /users/{userId} {
       allow read: if request.auth != null && 
                    (request.auth.uid == userId || 
                     isManager() && isEmployee(userId) ||
                     isSuperAdmin());
      allow create: if request.auth != null;
      allow update: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow delete: if isSuperAdmin();
    }
    
    match /users_by_email/{email} {
      allow read, create: if true;
    }

    // Anyone can read products. Only managers can write them.
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && isManager();
    }
    
    // Only managers can access orders, expenses and inventory for their business
    match /{collection}/{docId} 
        where collection in ['orders', 'expenses', 'inventory'] {
      allow read, write: if request.auth != null && isManager();
    }
  }
}
